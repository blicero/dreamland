# -*- mode: org; fill-column: 78; -*-
# Time-stamp: <2025-03-18 00:14:58 krylon>
#
#+TAGS: internals(i) ui(u) bug(b) feature(f)
#+TAGS: design(e), meditation(m) plot(p)
#+TAGS: optimize(o) refactor(r) cleanup(c)
#+TODO: TODO(t)  RESEARCH(r) IMPLEMENT(i) TEST(e) | DONE(d) FAILED(f) CANCELLED(c)
#+TODO: MEDITATE(m) PLANNING(p) | SUSPENDED(s)
#+PRIORITIES: A G D

* Dreamland [0/0]
  :PROPERTIES:
  :COOKIE_DATA: todo recursive
  :VISIBILITY: children
  :END:
  I have not touched Ruby in at least 12 years, probably quite a bit
  longer. It's annoying, but I have forgotten so much, and Ruby has
  continued to evolve, so I have to almost re-learn it from scratch.
  But I have a hunch that I need the flexibility and *fluidity* that
  Ruby offers over Python.
** Clocktable
   #+BEGIN: clocktable :scope file :maxlevel 255 :emphasize t
   #+CAPTION: Clock summary at [2025-03-17 Mo 23:09]
   | Headline     | Time   |
   |--------------+--------|
   | *Total time* | *0:00* |
   #+END:
** Features [0/0]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
** Components [0/0]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
** Bugs [0/0]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
** Musings
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
